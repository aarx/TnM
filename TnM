Sub GenerateWorkLog()
    Dim ws As Worksheet, workTypeSheet As Worksheet
    Dim workTypes As Variant
    Dim startDate As Date, endDate As Date
    Dim currentDate As Date, weekNum As Integer
    Dim rowCounter As Integer
    Dim usedTimes As Object
    Dim totalWorkTime As Double, remainingTime As Double
    
    ' Define sheets
    On Error Resume Next
    Set ws = ThisWorkbook.Sheets("WorkLog")
    Set workTypeSheet = ThisWorkbook.Sheets("WorkTypes")
    On Error GoTo 0

    ' If WorkLog sheet doesn't exist, create it
    If ws Is Nothing Then
        Set ws = ThisWorkbook.Sheets.Add
        ws.Name = "WorkLog"
    Else
        ws.Cells.Clear ' Clear old data
    End If
    
    ' Get work types from WorkTypes sheet
    workTypes = workTypeSheet.Range("A1:A" & workTypeSheet.Cells(Rows.Count, 1).End(xlUp).Row).Value
    
    ' Ask for the month and year
    Dim monthYear As String
    monthYear = InputBox("Enter the month and year (MM/YYYY):", "Select Month", Format(Date, "MM/YYYY"))
    If monthYear = "" Then Exit Sub ' Exit if canceled
    
    ' Get start and end date for the selected month
    startDate = DateValue("1/" & monthYear)
    endDate = DateAdd("m", 1, startDate) - 1

    ' Add headers
    ws.Range("A1:G1").Value = Array("Week", "Date", "Work Description", "Status", "Time Start", "Time Stop", "Time Spent")
    rowCounter = 2

    ' Loop through the month (5 days a week)
    currentDate = startDate
    Do While currentDate <= endDate
        If Weekday(currentDate, vbMonday) <= 5 Then ' Only Monday to Friday
            weekNum = Application.WorksheetFunction.RoundUp(Day(currentDate) / 7, 0) ' Calculate week number
            
            Set usedTimes = CreateObject("Scripting.Dictionary")
            totalWorkTime = 0
            
            ' Add recurring tasks
            Call AddFixedTask(ws, rowCounter, weekNum, currentDate, "Reading Emails", "3:00:00 PM", "3:30:00 PM", usedTimes, totalWorkTime)
            Call AddFixedTask(ws, rowCounter, weekNum, currentDate, "G Team Call", "6:00:00 PM", "6:30:00 PM", usedTimes, totalWorkTime)
            Call AddFixedTask(ws, rowCounter, weekNum, currentDate, "T TC", "9:00:00 PM", "9:30:00 PM", usedTimes, totalWorkTime)
            If Weekday(currentDate, vbMonday) = 2 Then ' Tuesday check
                Call AddFixedTask(ws, rowCounter, weekNum, currentDate, "Perim", "7:00:00 PM", "7:30:00 PM", usedTimes, totalWorkTime)
            End If

            ' Calculate remaining time to fill 8 hours
            remainingTime = (8 / 24) - totalWorkTime ' Convert 8 hours to fraction of a day
            
            ' Generate random tasks until total time reaches 8 hours
            Call FillRemainingTasks(ws, rowCounter, weekNum, currentDate, workTypes, usedTimes, remainingTime)
        End If
        currentDate = currentDate + 1
    Loop

    ' Format time columns to hh:mm:ss
    ws.Columns("E:G").NumberFormat = "hh:mm:ss"
    
    ' Autofit columns
    ws.Columns("A:G").AutoFit
    
    MsgBox "Work log generated for " & monthYear & "!", vbInformation, "Success"
End Sub

' Subroutine to add fixed tasks
Sub AddFixedTask(ws As Worksheet, ByRef rowCounter As Integer, weekNum As Integer, currentDate As Date, workType As String, startTime As String, stopTime As String, usedTimes As Object, ByRef totalWorkTime As Double)
    Dim timeStart As Date, timeStop As Date, timeSpent As Double
    timeStart = TimeValue(startTime)
    timeStop = TimeValue(stopTime)
    timeSpent = timeStop - timeStart
    
    ws.Cells(rowCounter, 1).Value = weekNum
    ws.Cells(rowCounter, 2).Value = currentDate
    ws.Cells(rowCounter, 3).Value = workType
    ws.Cells(rowCounter, 4).Value = "Ongoing"
    ws.Cells(rowCounter, 5).Value = Format(timeStart, "hh:mm:ss AM/PM")
    ws.Cells(rowCounter, 6).Value = Format(timeStop, "hh:mm:ss AM/PM")
    ws.Cells(rowCounter, 7).Value = Format(timeSpent, "[h]:mm:ss")
    
    usedTimes.Add Format(timeStart, "hh:mm:ss AM/PM"), timeStop
    totalWorkTime = totalWorkTime + timeSpent
    rowCounter = rowCounter + 1
End Sub

' Subroutine to fill remaining tasks
Sub FillRemainingTasks(ws As Worksheet, ByRef rowCounter As Integer, weekNum As Integer, currentDate As Date, workTypes As Variant, usedTimes As Object, remainingTime As Double)
    Dim timeStart As Date, timeStop As Date, duration As Double
    Dim workType As String
    Dim formattedTime As String

    ' Ensure workTypes is not empty
    If UBound(workTypes, 1) < 1 Then Exit Sub

    Do While remainingTime > 0
        workType = workTypes(Application.WorksheetFunction.RandBetween(1, UBound(workTypes, 1)), 1)
        timeStart = GetAvailableTime(usedTimes)
        duration = Application.WorksheetFunction.RandBetween(30, 120) / 1440 ' 30 to 120 min
        timeStop = timeStart + duration
        
        ' Ensure stop time is within working hours
        If timeStop <= TimeValue("12:00:00 AM") Then
            usedTimes.Add Format(timeStart, "hh:mm:ss AM/PM"), timeStop
            
            ' Fill row
            ws.Cells(rowCounter, 1).Value = weekNum
            ws.Cells(rowCounter, 2).Value = currentDate
            ws.Cells(rowCounter, 3).Value = workType
            ws.Cells(rowCounter, 4).Value = "Ongoing"
            ws.Cells(rowCounter, 5).Value = Format(timeStart, "hh:mm:ss AM/PM")
            ws.Cells(rowCounter, 6).Value = Format(timeStop, "hh:mm:ss AM/PM")
            ws.Cells(rowCounter, 7).Value = Format(timeStop - timeStart, "[h]:mm:ss")
            
            rowCounter = rowCounter + 1
            remainingTime = remainingTime - duration
        End If
    Loop
End Sub

' Function to get available random time slot
Function GetAvailableTime(usedTimes As Object) As Date
    Dim timeStart As Date
    Dim formattedTime As String
    
    Do
        timeStart = TimeSerial(15 + Int(Rnd() * 9), Int(Rnd() * 60), Int(Rnd() * 60)) ' Random between 3 PM and 11 PM
        formattedTime = Format(timeStart, "hh:mm:ss AM/PM")
    Loop Until Not usedTimes.exists(formattedTime)
    
    GetAvailableTime = timeStart
End Function
